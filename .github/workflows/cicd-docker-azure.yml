name: Build and deploy Spring Boot App To Azure From Docker Image
on:
  push:
    branches: [ toAzure ]

env:
  AZURE_WEBAPP_NAME: app-devops  # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: ${{ github.workspace }} # set this to the path to your web app project
  JAVA_VERSION: 17
jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn package --file pom.xml

      - name: Build Docker Image
        run: docker build -t thomas4991/${{ env.AZURE_WEBAPP_NAME }} .
      - name: Log in to Docker Hub
        run : echo ${{ secrets.DOCKER_HUB_TOKEN}} | docker login -u ${{secrets.DOCKER_HUB_USERNAME}} --password-stdin

      - name: Log in to Docker Hub
        run : echo ${{ secrets.DOCKER_HUB_TOKEN}} | docker login -u ${{secrets.DOCKER_HUB_USERNAME}} --password-stdin

      - name: Push Docker image
        run : docker push thomas4991/${{ env.AZURE_WEBAPP_NAME }}

      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/target/*.jar'

#fonctionnel
#  Build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: 17
#          distribution: 'temurin'
#
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml # mvn clean package
#
#      - name: Build Docker Image
#        run: docker build -t thomas4991/app-demo-spring-azure .
#
#      - name: Log in to Docker Hub
#        run : echo ${{ secrets.DOCKER_HUB_TOKEN}} | docker login -u ${{secrets.DOCKER_HUB_USERNAME}} --password-stdin
#
#      - name: Check image locale
#        run : docker image ls
#
#      - name: Push Docker image
#        run : docker push thomas4991/app-demo-spring-azure
# FIN FONCTIONNEL
      #- name: Log in to Azure
      #  uses: azure/login@v1
      #  with:
        #creds: '{"clientId": "${{ secrets.AZURE_CREDENTIALS }}"'}
      #    client-id: ${{ secrets.AZURE_CREDENTIALS }}
#      - name: Download Build Artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: app-devops

#      - name: Deploy to Azure Web App
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: app-devops
#         # slot-name:
#          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#          package: '*.jar'

     # - name: 'Deploy Docker image'
     #   run: |
     #     az login -u ${{secrets.AZURE_LOGIN}} -p ${{secrets.AZURE_PASSWORD}}
     #     az appservice plan create --name myDeployAzurePlan --resource-group devops-groups --sku B1 --is-linux
     #     az webapp create --name app-docker-spring --plan myDeployAzurePlan --resource-group devops-groups --deployment-container-image-name nginx:latest

     #     az webapp create --resource-group devops-groups --name app-devops --plan myDeployAzurePlan --deployment-container-image-name app--demo-spring-azure
     #     az webapp config container set --name app-devops --resource-group devops-groups --docker-custom-image-name thomas4991/app-demo-spring-azure:latest
          
          #resource-group: app-demo-spring-azure-rg
          #location: westus2
          #docker-file: Dockerfile
          #tag: latest


